# Place a copy of this config to ~/.aerospace.toml
# After that, you can edit ~/.aerospace.toml to your liking

# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = [
  'layout tiles',
  'exec-and-forget borders active_color=0xAA56b6c2 inactive_color=0x00000000 width=5.0 zblacklist=kitty',
  'exec-and-forget zsh -c google-chrome-stable',
  'layout tiles'
]

# Start AeroSsace at login
start-at-login = true

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 30

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# Fallback value (if you omit the key): on-focused-monitor-changed = []
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']

# TODO: this isn't working, sad
exec-on-workspace-change = ['/bin/bash', '-c',
    'if [[ "$AEROSPACE_FOCUSED_WORKSPACE" == "4" ]] && ! aerospace list-windows --workspace 4 | grep -q beth; then code ~/repos/beth.code-workspace; fi'
]

# You can effectively turn off macOS "Hide application" (cmd-h) feature by toggling this flag
# Useful if you don't use this macOS feature, but accidentally hit cmd-h or cmd-alt-h key
# Also see: https://nikitabobko.github.io/AeroSpace/goodness#disable-hide-app
automatically-unhide-macos-hidden-apps = false

# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
[key-mapping]
preset = 'qwerty'

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = 10
inner.vertical =   10
outer.left =       10
outer.bottom =     10
outer.top =        10
outer.right =      10

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
# Fallback value (if you omit the key): mode.main.binding = {}
[mode.main.binding]

# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,
#                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift

# All possible commands: https://nikitabobko.github.io/AeroSpace/commands
alt-shift-k = 'move up'
alt-shift-h = 'move left'
alt-shift-l = 'move right'
alt-shift-j = 'exec-and-forget aerospace list-windows --workspace focused | tail -n 1 | wc -l | xargs aerospace focus --dfs-index && aerospace move left && aerospace move left && aerospace move left'
# alt-shift- = 'move down'
alt-1 = 'workspace 1'
alt-2 = 'workspace 2'
alt-3 = 'workspace 3'
alt-4 = 'workspace 4'
alt-5 = 'workspace 5'
alt-6 = 'workspace 6'
alt-shift-1 = 'move-node-to-workspace 1'
alt-shift-2 = 'move-node-to-workspace 2'
alt-shift-3 = 'move-node-to-workspace 3'
alt-shift-4 = 'move-node-to-workspace 4'
alt-shift-5 = 'move-node-to-workspace 5'
alt-shift-6 = 'move-node-to-workspace 6'
alt-shift-z = 'fullscreen'
alt-z = 'fullscreen'
alt-shift-tab = 'move-workspace-to-monitor --wrap-around next'
alt-shift-enter = 'exec-and-forget aerospace list-windows --workspace T | grep -q "kitty" && { aerospace list-workspaces --focused | grep -q "T" && aerospace workspace-back-and-forth || aerospace workspace T; } || open -a kitty'
# alt-shift-ctrl-q = "exec-and-forget zsh -c 'cat ~/.xmonad-shortcuts | head -n 1 | tail -1 | xargs activate-chrome-tab'"
alt-shift-ctrl-q = 'exec-and-forget aerospace list-windows --workspace S | grep -q "Slack" && { aerospace list-workspaces --focused | grep -q "S" && aerospace workspace-back-and-forth || aerospace workspace S; } || open -a Slack'
# alt-shift-ctrl-q = "exec-and-forget open -a 'Slack'"
alt-shift-ctrl-w = "exec-and-forget zsh -c 'cat ~/.xmonad-shortcuts | head -n 2 | tail -1 | xargs activate-chrome-tab'"
alt-shift-ctrl-e = "exec-and-forget zsh -c 'cat ~/.xmonad-shortcuts | head -n 3 | tail -1 | xargs activate-chrome-tab'"
alt-shift-ctrl-r = "exec-and-forget zsh -c 'cat ~/.xmonad-shortcuts | head -n 4 | tail -1 | xargs activate-chrome-tab'"
alt-shift-n = "exec-and-forget open -a 'Roam Research'"
alt-shift-ctrl-p = "exec-and-forget /etc/profiles/per-user/dhines/bin/flameshot gui"
alt-shift-ctrl-cmd-p = "exec-and-forget /etc/profiles/per-user/dhines/bin/flameshot gui --raw --accept-on-select | /etc/profiles/per-user/dhines/bin/tesseract stdin stdout -l eng --psm 6 | pbcopy"
alt-shift-c = "close"

# See: https://nikitabobko.github.io/AeroSpace/commands#mode
alt-shift-semicolon = 'mode service'

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
esc = ['reload-config', 'mode main']
r = ['flatten-workspace-tree', 'mode main'] # reset layout
f = ['layout floating tiling', 'mode main'] # Toggle between floating and tiling layout
backspace = ['close-all-windows-but-current', 'mode main']

# sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
#s = ['layout sticky tiling', 'mode main']

alt-shift-h = ['join-with left', 'mode main']
alt-shift-j = ['join-with down', 'mode main']
alt-shift-k = ['join-with up', 'mode main']
alt-shift-l = ['join-with right', 'mode main']

[[on-window-detected]]
if.app-name-regex-substring = "kitty"
run = ['move-node-to-workspace T']

[[on-window-detected]]
if.app-name-regex-substring = "Slack"
run = ['move-node-to-workspace S']

[workspace-to-monitor-force-assignment]
1 = 'main'
2 = 'main'
3 = 'main'
4 = 'main'
5 = 'secondary'
6 = 'secondary'
T = 'main'
S = 'main'
