#!/usr/bin/env node
const path = require("path");
const fs = require("fs");
const { execSync } = require("child_process");

const is_main_or_master = (p) => p === "main" || p === "master";

const getDirectories = (source) =>
  fs
    .readdirSync(source, { withFileTypes: true })
    .filter((dirent) => dirent.isDirectory())
    .map((dirent) => dirent.name);

function find_git_root(dir) {
  if (dir === "/") {
    throw new Error(
      "Could not find the root of the git worktree. Expected a sibling folder named 'main' or 'master'."
    );
  }
  const root = getDirectories(dir).find(is_main_or_master);
  if (root) {
    return dir;
  } else {
    return find_git_root(path.dirname(dir));
  }
}

const [remoteName, branchName] = process.argv[3]
  ? [process.argv[2], process.argv[3]]
  : ["origin", process.argv[2]];
const root = find_git_root(process.cwd());
const fullPath = path.join(root, branchName);
const currentBranch = process.cwd();
try {
  console.log(`Creating branch ${branchName} tracking ${remoteName}`);
  execSync(`git checkout --track ${remoteName}/${branchName}`);
} catch (error) {
} 
// Reset the current branch
execSync(`git checkout ${currentBranch}`);

console.log("Creating worktree");
execSync(`git worktree add ${fullPath} ${branchName}`);
console.log(`Worktree ${fullPath.replace(process.env.HOME, "~")} created`);
const workspace = fs
  .readdirSync(root)
  .find((x) => x.endsWith("code-workspace"));
if (workspace) {
  console.log("Adding to workspace");
  let wsPath = path.join(root, workspace);
  const json = JSON.parse(fs.readFileSync(wsPath, { encoding: "utf-8" }));
  json.folders.push({ name: path.basename(branchName), path: branchName });
  fs.writeFileSync(wsPath, JSON.stringify(json));
}
