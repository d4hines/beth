#!/usr/bin/env bash

set -e

# TODO: how to detect this?
REMOTE="origin"

if [ "$2" = "-v" ]; then
    set -x
fi

NEW_BRANCH="$1"

if [ -z "$NEW_BRANCH" ]; then
    echo "Usage: $0 <branch name>"
    exit 1 
fi

BRANCH="$(git branch --show-current)"

if [[ ! $BRANCH =~ ^[a-zA-Z0-9._/-]+$ ]]; then
    echo "Invalid Git branch name. Aborting."
    exit 1 
fi

GIT_ROOT=$(git rev-parse --show-toplevel)

# Derive BASE_DIR by removing the branch name from the end of CURRENT_DIR
# Using % to trim from the end
BASE_DIR="${GIT_ROOT%"$BRANCH"}"

# Create a directory path from the branch name
# Replace '/' with '-' to ensure it's a valid directory name
DIR_PATH="${BASE_DIR}${NEW_BRANCH}"

# Check if the directory already exists
if [ -d "$DIR_PATH" ]; then
    echo "Directory for branch already exists: $DIR_PATH"
    exit 1
fi

# Create the branch
if ! git rev-parse --verify "$NEW_BRANCH" >/dev/null 2>&1; then
    git branch "$NEW_BRANCH"
fi

# Create the directory
mkdir -p "$DIR_PATH"

# Add the new worktree for the branch
git worktree add "$DIR_PATH" "$NEW_BRANCH"

# Reset to origin if it exists
pushd "$DIR_PATH"
git reset --hard "$REMOTE/$NEW_BRANCH" || true
popd

echo "Worktree for branch '$NEW_BRANCH' added at '$DIR_PATH'"
